1) Le commit create in una repository locale, non vengono sincronizzate
automaticamente con la repository online collegata, di conseguenza l'affermazione è falsa.

2) Il nuovo nome standard del branch principale utilizzato come
convenzione in GIT è Main, quindi la risposta crretta è "Main".

3) Descriverei il workflow dei comandi git con git add -> git commit -> git push

4) Il comando da utilizzare per vedere l’elenco di tutte le commit del
branch in cui ci si trova e i loro hashcode è "git log".

5) Il comando per effettuare il rollback ad una commit precedente è "git reset [hash]".

6) Due motivazioni per l'utilizzo di git:

   Come pria motivazione, c'è sicuramente il lavoro di gruppo, di fatto molte aziende famose utilizzano git, come facebook e molte altre. Se per esempio c'è una persona nuova in azienda puo'       tranquillamente clonare il progetto su git tramite il comando "git clone".
   Come seconda motivazione, git è molto comodo per il fatto che si possono creare dei check point, un po' come i salvataggi dei videogiochi, che ci permettono di tornare ad una versione precedente del    programma senza rischiare di fare casino e quindi di perdere tempo a risistemare ilcodice come era prima.
   
7) La differenza tra git clone e git pull, è principalmente che git clone clona tutta una repository online e la mette in una repository locale, invece git pull permette di prendere le modifiche da un    altro user singolarmente e non quindi come il clone che clona tutta la repository.

8) I rami di sviluppo servono per creare del codice parallelo, magari per fare una qualche manutenzione al codice senza intaccare il codice sul ramo principale. Si puo' creare un nuovo branch tramite il comando "git checkout -b "nome del nuovo branch"" e ci si sposta attraverso essi sempre utilizzando il comando git checkout ma con una sintassi diversa, esattamente come segue "git checkout -m "nome del branch sul quale mi voglio spostare"". Due rami si uniscono attraverso il comando "git merge", e infine per vedere il ramo corrente basta fare "git status".

9) L'ingegneria del software si divide in 4 parti: 
   1) Progettazione, è la fase nella quale viene analizzato il problema e viene trovata una soluzione informatica ad esso;
   2) Realizzazione, la parte nella quale si scrive effettivamente io codice in un determinato linguaggio;
   3) Riutilizzo, si scrive codice che potrà poi essere riutilizzato il futuro per eventuali futuri progetti;
   4) Manutenzione, nella quale si fanno appunto delle operazioni di manutenzione al codice per sistemare alcuni bug,    migliorarlo e renderlo utilizzabile nel tempo.
 
10) Il ciclo del software è appunto il ciclo della vita del software, che parte dalla fase di progettazione, nella quale vengono attuate tutte le formalità del progetto e vengono fissati i vari obiettivi.
